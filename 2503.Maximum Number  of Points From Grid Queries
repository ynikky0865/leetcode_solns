class Solution:
    def maxPoints(self, grid: List[List[int]], queries: List[int]) -> List[int]:
        nr = len(grid)
        nc = len(grid[0])
        visited = [[False] * nc for _ in range(nr)]
        visited[0][0] = True
        points = 0
        qs = []
        for i, val in enumerate(queries):
            qs.append([val, i])
        qs.sort()
        res = [0] * len(qs)
        heap = [(grid[0][0], 0, 0)]
        for ele, idx in qs:
            while heap and heap[0][0] < ele:
                points += 1
                val, r, c = heapq.heappop(heap)
                for row, col in [[r, c+1], [r, c-1], [r-1, c], [r+1, c]]:
                    if 0 <= row < nr and 0 <= col < nc and not visited[row][col]:
                        heapq.heappush(heap, (grid[row][col], row, col))
                        visited[row][col] = True
            res[idx] = points
        return res
