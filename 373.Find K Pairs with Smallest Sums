class Solution:
    def kSmallestPairs(self, nums1: List[int], nums2: List[int], k: int) -> List[List[int]]:
        heap = []
        heapq.heappush(heap, [nums1[0]+nums2[0], 0, 0])
        res = []
        vis = set((0,0))
        while heap and k > 0:
            s, i1, i2 = heapq.heappop(heap)
            res.append([nums1[i1], nums2[i2]])
            k -= 1
            new_i1 = i1 + 1
            if new_i1 < len(nums1) and (new_i1, i2) not in vis:
                heapq.heappush(heap,[nums1[new_i1]+ nums2[i2], new_i1, i2])
                vis.add((new_i1, i2))
            new_i2 = i2 + 1
            if new_i2 < len(nums2) and (i1, new_i2) not in vis:
                heapq.heappush(heap,[nums1[i1]+ nums2[new_i2], i1, new_i2])
                vis.add((i1, new_i2))
        return res
